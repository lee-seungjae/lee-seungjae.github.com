# improved synchronized block in C++

* 작성: 2005-08-11
* 최종수정: 2005-08-11
* 태그: 멀티스레드 프로그래밍

관련글: [Synchronized1]

전에 썼던 synchronized block에 문제가 있습니다.

<code:Cpp>
synchronized(aLock)
	a.someMethod();
else
	b.someMethod();
</code>

이런 코드가 컴파일된다는 건데요.
누가 이런 코드를 쓰겠냐, 라고 말씀하실 분도 계실지 모르지만, 다음 코드를 보세요.

<code:Cpp>
if( someCondition )
	synchronized(aLock) a.someMethod();
else
	b.someMethod();
</code>

조건을 만족하면 락을 걸고 a.someMethod(),
만족하지 않으면 b.someMethod()라는 뜻이죠.

이게 전처리기를 거치면 다음과 같이 전개됩니다. (임의로 인덴트했어요)

<code:Cpp>
if( someCondition )
	if( AutoLock _syncVar = A )
		a.someMethod();
	else
		b.someMethod();
</code>

조건을 만족하면, 락을 걸고 a.someMethod(),
만족하지 않으면 아무것도 안 함.

어머! 뜻이 바뀌었네요! ;ㅁ;;;;

이렇게 고치면 문제가 해결되지요.

<code:Cpp>
operator bool()
{
	return false;
}

#define synchronized(A)     if( AutoLock _syncVar = A ) assert( 0 ); else
</code>


몇 년 전에 synchronized() 매크로에 관해 얘기해준 친구(탱이)가 알려주었습니다. 감사 'ㅁ'/